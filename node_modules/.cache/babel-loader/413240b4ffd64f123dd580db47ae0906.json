{"ast":null,"code":"var _jsxFileName = \"/Users/martina/Desktop/react-todo-new/src/pages/todo-list/todo-list.component.jsx\";\nimport React from 'react';\nimport AddItem from '../../components/add-item/add-item.component';\nimport ListItems from '../../components/list-items/list-items.component';\nimport ProgressBar from '../../components/progress-bar/progress-bar.component';\nimport Input from '../../components/input/input.component';\nimport './todo-list.styles.scss';\n\nclass ToDoList extends React.Component {\n  constructor() {\n    super();\n\n    this.onEditing = () => {\n      this.setState({\n        isEditing: !this.state.isEditing\n      });\n    };\n\n    this.onChange = e => {\n      this.setState({\n        input: e.target.value\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      const item = {\n        id: new Date().getTime(),\n        text: this.state.input,\n        isCompleted: false\n      };\n\n      if (!this.state.input.length) {\n        return false;\n      }\n\n      this.setState(state => ({\n        items: state.items.concat(item),\n        input: ''\n      }), () => this.setProgress(this.state.items));\n    };\n\n    this.onClick = id => {\n      let updated = this.state.items.map(item => {\n        if (item.id === id) {\n          item.isCompleted = !item.isCompleted;\n        }\n\n        return item;\n      });\n      this.setState({\n        items: updated\n      }, () => this.setProgress(updated));\n    };\n\n    this.onDelete = id => {\n      let filtered = this.state.items.filter(item => {\n        if (item.id !== id) {\n          return item;\n        }\n      });\n      this.setState({\n        items: filtered\n      }, () => this.setProgress(filtered));\n    };\n\n    this.setProgress = items => {\n      let progressBar = document.querySelector(\".progress\");\n\n      if (items.length >= 1) {\n        let checked = items.filter(item => {\n          return item.isCompleted;\n        });\n        let progress = checked.length / items.length;\n        this.setState({\n          progress: Math.floor(progress * 100)\n        });\n        progressBar.classList.remove(\"hidden\");\n      } else {\n        progressBar.classList.add(\"hidden\");\n      }\n    };\n\n    this.state = {\n      items: [],\n      input: '',\n      isEditing: false,\n      progress: 0\n    };\n  }\n\n  componentDidMount() {\n    let all = localStorage.getItem('items') != null ? JSON.parse(localStorage.getItem('items')) : [];\n    this.setState({\n      items: all\n    }, () => this.setProgress(this.state.items));\n  }\n\n  componentDidUpdate() {\n    localStorage.setItem('items', JSON.stringify(this.state.items));\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      className: \"todo-list-container\",\n      onSubmit: e => this.onSubmit(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"add-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(AddItem, {\n      onEditing: this.onEditing,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(Input, Object.assign({}, this.state, {\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"list-items\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(ListItems, Object.assign({}, this.state, {\n      onClick: this.onClick,\n      onDelete: this.onDelete,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }))), React.createElement(ProgressBar, Object.assign({}, this.state, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default ToDoList;","map":{"version":3,"sources":["/Users/martina/Desktop/react-todo-new/src/pages/todo-list/todo-list.component.jsx"],"names":["React","AddItem","ListItems","ProgressBar","Input","ToDoList","Component","constructor","onEditing","setState","isEditing","state","onChange","e","input","target","value","onSubmit","preventDefault","item","id","Date","getTime","text","isCompleted","length","items","concat","setProgress","onClick","updated","map","onDelete","filtered","filter","progressBar","document","querySelector","checked","progress","Math","floor","classList","remove","add","componentDidMount","all","localStorage","getItem","JSON","parse","componentDidUpdate","setItem","stringify","render"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport AddItem from '../../components/add-item/add-item.component';\nimport ListItems from '../../components/list-items/list-items.component';\nimport ProgressBar from '../../components/progress-bar/progress-bar.component';\nimport Input from '../../components/input/input.component';\n\nimport './todo-list.styles.scss';\n\nclass ToDoList extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      items: [],\n      input: '',\n      isEditing: false,\n      progress: 0,\n\n    }\n  }\n\n  componentDidMount() {\n    let all = localStorage.getItem('items') != null ? JSON.parse(localStorage.getItem('items')) : []\n    this.setState({ items: all }, () => this.setProgress(this.state.items))\n  }\n\n  componentDidUpdate() {\n    localStorage.setItem('items', JSON.stringify(this.state.items))\n  }\n\n  onEditing = () => {\n    this.setState({ isEditing : !this.state.isEditing })\n  }\n\n  onChange = e => { \n    this.setState({input: e.target.value })\n  }\n\n  onSubmit = e => {\n    e.preventDefault()\n    const item = { id: new Date().getTime(), text: this.state.input, isCompleted: false}\n    if (!this.state.input.length) { return false }\n    this.setState((state) => ({ \n      items : state.items.concat(item),\n      input: ''\n    }), () => this.setProgress(this.state.items))\n  }\n\n  onClick = id => { \n    let updated = this.state.items.map(item => {\n      if (item.id === id) { item.isCompleted = !item.isCompleted }\n      return item\n    })\n    this.setState({ items: updated }, () => this.setProgress(updated))\n  }\n\n  onDelete = id => { \n    let filtered = this.state.items.filter(item => {\n      if (item.id !== id) { return item }\n    })\n    this.setState({ items: filtered }, () => this.setProgress(filtered))\n  }\n\n  setProgress = items => {\n    let progressBar = document.querySelector(\".progress\")\n\n    if (items.length >= 1) {\n      let checked = items.filter(item => { return item.isCompleted })\n      let progress = checked.length / items.length\n      this.setState({ progress: Math.floor(progress * 100) })\n      progressBar.classList.remove(\"hidden\")\n    } else {\n      progressBar.classList.add(\"hidden\")\n    }\n  }\n\n  render() {\n    return (\n      <form className=\"todo-list-container\" onSubmit={(e) => this.onSubmit(e)}>\n        <div className='add-item'>\n          <AddItem onEditing={this.onEditing} />\n          <Input {...this.state} onChange={this.onChange} />\n        </div>\n        <div className='list-items'>\n          <ListItems {...this.state} onClick={this.onClick} onDelete={this.onDelete} />\n        </div>\n\n        <ProgressBar { ...this.state } />\n      </form>\n    );\n  }\n}\n\nexport default ToDoList;\n"]},"metadata":{},"sourceType":"module"}