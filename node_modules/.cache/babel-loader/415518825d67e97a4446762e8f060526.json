{"ast":null,"code":"var _jsxFileName = \"/Users/martina/Desktop/react-todo-new/src/pages/todo-list/todo-list.component.jsx\";\nimport React from 'react';\nimport AddItem from '../../components/add-item/add-item.component';\nimport ListItems from '../../components/list-items/list-items.component';\nimport './todo-list.styles.scss';\n\nconst Progress = props => {\n  const {\n    progress\n  } = props;\n  return React.createElement(\"div\", {\n    class: \"progress\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    class: \"progress-bar\",\n    role: \"progressbar\",\n    \"aria-valuenow\": \"25\",\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": \"100\",\n    style: {\n      width: progress + \"%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, progress + \"%\"));\n};\n\nconst Input = props => {\n  const {\n    isEditing,\n    input,\n    onChange\n  } = props;\n\n  if (isEditing) {\n    return React.createElement(\"span\", {\n      className: \"todo-wrap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      value: input,\n      onChange: e => onChange(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }));\n  } else {\n    return false;\n  }\n};\n\nclass ToDoList extends React.Component {\n  constructor() {\n    super();\n\n    this.onChange = e => {\n      this.setState({\n        input: e.target.value\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      const item = {\n        id: new Date().getTime(),\n        text: this.state.input,\n        isCompleted: false\n      };\n\n      if (!this.state.input.length) {\n        return false;\n      }\n\n      this.setState(state => ({\n        items: state.items.concat(item),\n        input: ''\n      }), () => this.setProgress(this.state.items));\n    };\n\n    this.onClick = id => {\n      let updated = this.state.items.map(item => {\n        if (item.id === id) {\n          item.isCompleted = !item.isCompleted;\n        }\n\n        return item;\n      });\n      this.setState({\n        items: updated\n      }, () => this.setProgress(updated));\n    };\n\n    this.onDelete = id => {\n      let filtered = this.state.items.filter(item => {\n        if (item.id !== id) {\n          return item;\n        }\n      });\n      this.setState({\n        items: filtered\n      }, () => this.setProgress(filtered));\n    };\n\n    this.setProgress = items => {\n      let checked = items.filter(item => {\n        return item.isCompleted;\n      });\n      let progress = checked.length / items.length;\n      this.setState({\n        progress: Math.floor(progress * 100)\n      });\n    };\n\n    this.state = {\n      items: [],\n      input: '',\n      isEditing: false,\n      progress: 0\n    };\n  }\n\n  componentDidMount() {\n    let all = localStorage.getItem('items') != null ? JSON.parse(localStorage.getItem('items')) : [];\n    this.setState({\n      items: all\n    }, () => this.setProgress(this.state.items));\n  }\n\n  componentDidUpdate() {\n    localStorage.setItem('items', JSON.stringify(this.state.items));\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      className: \"todo-list-container\",\n      onSubmit: e => this.onSubmit(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"add-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(AddItem, {\n      onEditing: this.onEditing,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(Input, Object.assign({}, this.state, {\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"list-items\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(Progress, Object.assign({}, this.state, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    })), React.createElement(ListItems, Object.assign({}, this.state, {\n      onClick: this.onClick,\n      onDelete: this.onDelete,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default ToDoList;","map":{"version":3,"sources":["/Users/martina/Desktop/react-todo-new/src/pages/todo-list/todo-list.component.jsx"],"names":["React","AddItem","ListItems","Progress","props","progress","width","Input","isEditing","input","onChange","e","ToDoList","Component","constructor","setState","target","value","onSubmit","preventDefault","item","id","Date","getTime","text","state","isCompleted","length","items","concat","setProgress","onClick","updated","map","onDelete","filtered","filter","checked","Math","floor","componentDidMount","all","localStorage","getItem","JSON","parse","componentDidUpdate","setItem","stringify","render","onEditing"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport AddItem from '../../components/add-item/add-item.component';\nimport ListItems from '../../components/list-items/list-items.component';\n\nimport './todo-list.styles.scss';\n\nconst Progress = props => {\n  const { progress } = props\n  return(\n    <div class=\"progress\">\n      <div \n        class=\"progress-bar\" \n        role=\"progressbar\" \n        aria-valuenow=\"25\" \n        aria-valuemin=\"0\" \n        aria-valuemax=\"100\" \n        style={{ width: progress + \"%\"}}\n      >\n        { progress + \"%\" }\n      </div>\n    </div>\n  )\n}\n\nconst Input = props => {\n  const { isEditing, input, onChange } = props\n  if (isEditing) {\n    return(\n      <span className=\"todo-wrap\" >\n        <input value={input} onChange={(e) => onChange(e)} />\n      </span> \n    ) \n  } else {\n    return false\n  }\n}\n\nclass ToDoList extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      items: [],\n      input: '',\n      isEditing: false,\n      progress: 0\n    }\n  }\n\n  componentDidMount() {\n    let all = localStorage.getItem('items') != null ? JSON.parse(localStorage.getItem('items')) : []\n    this.setState({ items: all }, () => this.setProgress(this.state.items))\n  }\n\n  componentDidUpdate() {\n    localStorage.setItem('items', JSON.stringify(this.state.items))\n  }\n\n  onChange = e => { \n    this.setState({input: e.target.value })\n  }\n\n  onSubmit = e => {\n    e.preventDefault()\n    const item = { id: new Date().getTime(), text: this.state.input, isCompleted: false}\n    if (!this.state.input.length) { return false }\n    this.setState((state) => ({ \n      items : state.items.concat(item),\n      input: ''\n    }), () => this.setProgress(this.state.items))\n  }\n\n  onClick = id => { \n    let updated = this.state.items.map(item => {\n      if (item.id === id) { item.isCompleted = !item.isCompleted }\n      return item\n    })\n    this.setState({ items: updated }, () => this.setProgress(updated))\n  }\n\n  onDelete = id => { \n    let filtered = this.state.items.filter(item => {\n      if (item.id !== id) { return item }\n    })\n    this.setState({ items: filtered }, () => this.setProgress(filtered))\n  }\n\n  setProgress = items => {\n    let checked = items.filter(item => { return item.isCompleted })\n    let progress = checked.length / items.length\n    this.setState({ progress: Math.floor(progress * 100) })\n  }\n\n  render() {\n    return (\n      <form className=\"todo-list-container\" onSubmit={(e) => this.onSubmit(e)}>\n        <div className='add-item'>\n          <AddItem onEditing={this.onEditing} />\n          <Input {...this.state} onChange={this.onChange} />\n        </div>\n        <div className='list-items'>\n          <Progress { ...this.state } />\n          <ListItems {...this.state} onClick={this.onClick} onDelete={this.onDelete} />\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default ToDoList;\n"]},"metadata":{},"sourceType":"module"}