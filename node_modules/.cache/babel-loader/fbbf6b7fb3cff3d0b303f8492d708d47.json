{"ast":null,"code":"var _jsxFileName = \"/Users/martina/Desktop/react-todo-new/src/pages/todo-list/todo-list.component.jsx\";\nimport React from 'react';\nimport './todo-list.styles.scss';\n\nconst Progress = props => {\n  const {\n    progress\n  } = props;\n  return React.createElement(\"div\", {\n    class: \"progress\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    class: \"progress-bar\",\n    role: \"progressbar\",\n    \"aria-valuenow\": \"25\",\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": \"100\",\n    style: {\n      width: progress + \"%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, progress + \"%\"));\n};\n\nconst List = props => {\n  const {\n    items,\n    onClick,\n    onDelete\n  } = props;\n\n  if (items.length > 0) {\n    return items.map(item => {\n      return React.createElement(\"span\", {\n        className: \"todo-wrap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        onClick: () => onClick(item.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        checked: item.isCompleted,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        for: \"1\",\n        className: \"todo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-check\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }), item.text)), React.createElement(\"span\", {\n        onClick: () => onDelete(item.id),\n        className: \"delete-item\",\n        title: \"remove\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-times-circle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      })));\n    });\n  } else {\n    return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Start adding\");\n  }\n};\n\nconst Input = props => {\n  const {\n    isEditing,\n    input,\n    onChange\n  } = props;\n\n  if (isEditing) {\n    return React.createElement(\"span\", {\n      className: \"todo-wrap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      value: input,\n      onChange: e => onChange(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }));\n  } else {\n    return false;\n  }\n};\n\nconst Add = props => {\n  const {\n    onEditing\n  } = props;\n  return React.createElement(\"div\", {\n    id: \"add-todo\",\n    onClick: () => onEditing(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fa fa-plus\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), \" \\xA0 Add an Item\");\n};\n\nclass ToDoList extends React.Component {\n  constructor() {\n    super();\n\n    this.onEditing = () => {\n      this.setState({\n        isEditing: !this.state.isEditing\n      });\n    };\n\n    this.onChange = e => {\n      this.setState({\n        input: e.target.value\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      const item = {\n        id: new Date().getTime(),\n        text: this.state.input,\n        isCompleted: false\n      };\n\n      if (!this.state.input.length) {\n        return false;\n      }\n\n      this.setState(state => ({\n        items: state.items.concat(item),\n        input: ''\n      }), () => this.setProgress(this.state.items));\n    };\n\n    this.onClick = id => {\n      let updated = this.state.items.map(item => {\n        if (item.id === id) {\n          item.isCompleted = !item.isCompleted;\n        }\n\n        return item;\n      });\n      this.setState({\n        items: updated\n      }, () => this.setProgress(updated));\n    };\n\n    this.onDelete = id => {\n      let filtered = this.state.items.filter(item => {\n        if (item.id !== id) {\n          return item;\n        }\n      });\n      this.setState({\n        items: filtered\n      }, () => this.setProgress(filtered));\n    };\n\n    this.setProgress = items => {\n      let checked = items.filter(item => {\n        return item.isCompleted;\n      });\n      let progress = checked.length / items.length;\n      this.setState({\n        progress: Math.floor(progress * 100)\n      });\n    };\n\n    this.state = {\n      items: [],\n      input: '',\n      isEditing: false,\n      progress: 0\n    };\n  }\n\n  componentDidMount() {\n    let all = localStorage.getItem('items') != null ? JSON.parse(localStorage.getItem('items')) : [];\n    this.setState({\n      items: all\n    }, () => this.setProgress(this.state.items));\n  }\n\n  componentDidUpdate() {\n    localStorage.setItem('items', JSON.stringify(this.state.items));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"todo-list-container\",\n      onSubmit: e => this.onSubmit(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(Progress, Object.assign({}, this.state, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    })), React.createElement(List, Object.assign({}, this.state, {\n      onClick: this.onClick,\n      onDelete: this.onDelete,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    })), React.createElement(Input, Object.assign({}, this.state, {\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    })), React.createElement(Add, {\n      onEditing: this.onEditing,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default ToDoList;","map":{"version":3,"sources":["/Users/martina/Desktop/react-todo-new/src/pages/todo-list/todo-list.component.jsx"],"names":["React","Progress","props","progress","width","List","items","onClick","onDelete","length","map","item","id","isCompleted","text","Input","isEditing","input","onChange","e","Add","onEditing","ToDoList","Component","constructor","setState","state","target","value","onSubmit","preventDefault","Date","getTime","concat","setProgress","updated","filtered","filter","checked","Math","floor","componentDidMount","all","localStorage","getItem","JSON","parse","componentDidUpdate","setItem","stringify","render"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport './todo-list.styles.scss';\n\nconst Progress = props => {\n  const { progress } = props\n  return(\n    <div class=\"progress\">\n      <div \n        class=\"progress-bar\" \n        role=\"progressbar\" \n        aria-valuenow=\"25\" \n        aria-valuemin=\"0\" \n        aria-valuemax=\"100\" \n        style={{ width: progress + \"%\"}}\n      >\n        { progress + \"%\" }\n      </div>\n    </div>\n  )\n}\n\nconst List = props => {\n  const { items, onClick, onDelete } = props\n  if (items.length > 0) {\n    return items.map(item => {\n      return(\n        <span className=\"todo-wrap\">\n          <span onClick={() => onClick(item.id)}>\n            <input type=\"checkbox\" checked={item.isCompleted} />\n            <label for=\"1\" className=\"todo\">\n              <i className=\"fa fa-check\"></i>\n              { item.text }\n            </label>\n          </span>\n      \n          <span \n            onClick={() => onDelete(item.id)}\n            className=\"delete-item\" \n            title=\"remove\" \n          >\n            <i className=\"fa fa-times-circle\"></i>\n          </span> \n        </span> \n      )\n    }) \n  } else {\n    return(<p>Start adding</p>)\n  }\n}\n\nconst Input = props => {\n  const { isEditing, input, onChange } = props\n  if (isEditing) {\n    return(\n      <span className=\"todo-wrap\" >\n        <input value={input} onChange={(e) => onChange(e)} />\n      </span> \n    ) \n  } else {\n    return false\n  }\n}\n\nconst Add = props => {\n  const { onEditing } = props\n  return(\n    <div id=\"add-todo\" onClick={() => onEditing()}><i className=\"fa fa-plus\"></i> &nbsp; Add an Item</div>\n  )\n}\n\nclass ToDoList extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      items: [],\n      input: '',\n      isEditing: false,\n      progress: 0\n    }\n  }\n\n  componentDidMount() {\n    let all = localStorage.getItem('items') != null ? JSON.parse(localStorage.getItem('items')) : []\n    this.setState({ items: all }, () => this.setProgress(this.state.items))\n  }\n\n  componentDidUpdate() {\n    localStorage.setItem('items', JSON.stringify(this.state.items))\n  }\n\n  onEditing = () => {\n    this.setState({ isEditing : !this.state.isEditing })\n  }\n\n  onChange = e => { \n    this.setState({input: e.target.value })\n  }\n\n  onSubmit = e => {\n    e.preventDefault()\n    const item = { id: new Date().getTime(), text: this.state.input, isCompleted: false}\n    if (!this.state.input.length) { return false }\n    this.setState((state) => ({ \n      items : state.items.concat(item),\n      input: ''\n    }), () => this.setProgress(this.state.items))\n  }\n\n  onClick = id => { \n    let updated = this.state.items.map(item => {\n      if (item.id === id) { item.isCompleted = !item.isCompleted }\n      return item\n    })\n    this.setState({ items: updated }, () => this.setProgress(updated))\n  }\n\n  onDelete = id => { \n    let filtered = this.state.items.filter(item => {\n      if (item.id !== id) { return item }\n    })\n    this.setState({ items: filtered }, () => this.setProgress(filtered))\n  }\n\n  setProgress = items => {\n    let checked = items.filter(item => { return item.isCompleted })\n    let progress = checked.length / items.length\n    this.setState({ progress: Math.floor(progress * 100) })\n  }\n\n  render() {\n    return (\n      <div className=\"todo-list-container\" onSubmit={(e) => this.onSubmit(e)}>\n        <Progress { ...this.state } />\n        <List {...this.state} onClick={this.onClick} onDelete={this.onDelete} />\n        <Input {...this.state} onChange={this.onChange} />\n        <Add onEditing={this.onEditing} />\n      </div>\n    );\n  }\n}\n\nexport default ToDoList;\n"]},"metadata":{},"sourceType":"module"}